#BlueJ class context
comment0.params=numLinhas\ numColunas
comment0.target=MatrizDeInt(int,\ int)
comment0.text=\n\ Cria\ uma\ matriz.\ A\ matriz,\ inicialmente,\ armazena\ zeros.\n\n\ @param\ numLinhas\ O\ n\u00FAmero\ de\ linhas\ da\ matriz.\n\ @param\ numColunas\ O\ n\u00FAmero\ de\ colunas\ da\ matriz.\n
comment1.params=dados
comment1.target=MatrizDeInt(int[][])
comment1.text=\n\ Cria\ uma\ matriz\ contendo\ dados\ previamente\ definidos.\n\n\ @param\ dados\ Os\ dados\ da\ matriz.\n
comment10.params=
comment10.target=int\ getSoma2()
comment10.text=\n\ Obt\u00E9m\ a\ soma\ de\ todos\ os\ n\u00FAmeros\ da\ matriz.\ Tem\ o\ mesmo\ objetivo,\ portanto,\ que\ o\n\ m\u00E9todo\ getSoma.\ A\ diferen\u00E7a\ est\u00E1\ apenas\ na\ implementa\u00E7\u00E3o\ do\ m\u00E9todo.\ Analise\ e\ compare\n\ a\ implementa\u00E7\u00E3o\ usada\ nos\ dois\ m\u00E9todos\ (getSoma\ e\ getSoma2).\n\n\ @return\ A\ soma\ dos\ n\u00FAmeros\ da\ matriz.\n
comment11.params=numero
comment11.target=void\ multipliquePor(int)
comment11.text=\n\ Multiplica\ cada\ n\u00FAmero\ da\ matriz\ por\ um\ determinado\ n\u00FAmero.\n\n\ @param\ numero\ O\ n\u00FAmero.\n
comment12.params=
comment12.target=MatrizDeInt\ clone()
comment12.text=\n\ Obt\u00E9m\ uma\ c\u00F3pia\ da\ matriz.\ Assim,\ qualquer\ altera\u00E7\u00E3o\ feita\ em\ uma\ das\ matrizes\ (a\ original\ ou\ a\n\ clonada)\ n\u00E3o\ afeta\ a\ outra\ matriz.\n\n\ @return\ A\ c\u00F3pia\ da\ matriz.\n
comment13.params=that
comment13.target=MatrizDeInt\ some(MatrizDeInt)
comment13.text=\n\ Obt\u00E9m\ a\ soma\ a\ matriz\ com\ a\ matriz\ passada\ como\ par\u00E2metro.\n\n\ @param\ that\ A\ matriz\ a\ ser\ somada.\n\ @return\ A\ matriz\ resultante\ da\ soma\ das\ duas\ matrizes.\ Retorna\ null\ se\ a\ soma\ n\u00E3o\ for\n\ matematicamente\ poss\u00EDvel.\n
comment14.params=that
comment14.target=MatrizDeInt\ multiplique(MatrizDeInt)
comment14.text=\n\ Obt\u00E9m\ a\ multiplica\u00E7\u00E3o\ a\ matriz\ com\ a\ matriz\ passada\ como\ par\u00E2metro.\n\n\ @param\ that\ A\ matriz\ a\ ser\ multiplicada.\n\ @return\ A\ matriz\ resultante\ da\ multiplica\u00E7\u00E3o\ das\ duas\ matrizes.\ Retorna\ null\ se\ a\ multiplica\u00E7\u00E3o\ n\u00E3o\ for\n\ matematicamente\ poss\u00EDvel.\n
comment2.params=linha\ coluna\ valor
comment2.target=void\ setValor(int,\ int,\ int)
comment2.text=\n\ Define\ um\ valor\ da\ matriz.\n\n\ @param\ linha\ A\ linha\ do\ valor,\ que\ deve\ ser\ no\ m\u00EDnimo\ 1.\n\ @param\ coluna\ A\ coluna\ do\ valor,\ que\ deve\ ser\ no\ m\u00EDnimo\ 1.\n\ @param\ valor\ O\ valor\ a\ ser\ armazenado\ na\ posi\u00E7\u00E3o\ linha\ coluna.\n
comment3.params=linha\ coluna
comment3.target=int\ getValor(int,\ int)
comment3.text=\n\ Obt\u00E9m\ um\ valor\ armazenado\ na\ matriz.\n\n\ @param\ linha\ A\ linha\ do\ valor,\ que\ deve\ ser\ no\ m\u00EDnimo\ 1.\n\ @param\ coluna\ A\ coluna\ do\ valor,\ que\ deve\ ser\ no\ m\u00EDnimo\ 1.\n\ @return\ O\ valor\ que\ est\u00E1\ na\ posi\u00E7\u00E3o\ linha\ coluna.\n
comment4.params=
comment4.target=int\ getNumLinhas()
comment4.text=\n\ Obt\u00E9m\ o\ n\u00FAmero\ de\ linhas\ da\ matriz.\n\n\ @return\ O\ n\u00FAmero\ de\ linhas\ da\ matriz.\n
comment5.params=
comment5.target=int\ getNumColunas()
comment5.text=\n\ Obt\u00E9m\ o\ n\u00FAmero\ de\ colunas\ da\ matriz.\n\n\ @return\ O\ n\u00FAmero\ de\ colunas\ da\ matriz.\n
comment6.params=linha
comment6.target=int\ getSomaDaLinha(int)
comment6.text=\n\ Obt\u00E9m\ a\ soma\ dos\ valores\ de\ uma\ linha\ da\ matriz.\n\n\ @param\ linha\ A\ linha\ da\ matriz.\ A\ primeira\ linha\ \u00E9\ a\ 1.\n\ @return\ A\ soma\ dos\ valores\ da\ linha.\n
comment7.params=coluna
comment7.target=int\ getSomaDaColuna(int)
comment7.text=\n\ Obt\u00E9m\ a\ soma\ dos\ valores\ de\ uma\ coluna\ da\ matriz.\n\n\ @param\ coluna\ A\ coluna\ da\ matriz.\ A\ primeira\ coluna\ \u00E9\ a\ 1.\n\ @return\ A\ soma\ dos\ valores\ da\ coluna.\n
comment8.params=
comment8.target=int[]\ getSomasDasLinhas()
comment8.text=\n\ Obt\u00E9m\ as\ somas\ de\ cada\ uma\ das\ linhas\ da\ matriz.\ Assim,\ se\ uma\ matriz\ tem\n\ N\ linhas\ ent\u00E3o\ ser\u00E3o\ obtidas\ N\ somas.\n\n\ @return\ As\ somas\ de\ cada\ linha\ da\ matriz.\n
comment9.params=
comment9.target=int\ getSoma()
comment9.text=\n\ Obt\u00E9m\ a\ soma\ de\ todos\ os\ n\u00FAmeros\ da\ matriz.\n\n\ @return\ A\ soma\ dos\ n\u00FAmeros\ da\ matriz.\n
numComments=15
